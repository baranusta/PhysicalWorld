#version 430 core

//Explicit Euler & Backward Euler

layout (local_size_x = 8, local_size_y = 1) in;

layout(std430, binding = 0) buffer position_ssbo{ vec4 position[]; };
layout(std430, binding = 1) buffer velocity_ssbo{ vec4 velocity[]; };
layout(std430, binding = 2) buffer force_ssbo{ vec4 force[]; };
layout(std430, binding = 3) buffer mass_ssbo{ float mass[]; };

uniform float timeStep;
uniform uint size;
uniform vec4 gravity;

void main(void)
{
	uint id = gl_WorkGroupID.x * gl_WorkGroupSize.x + gl_LocalInvocationID.x;
	if(id < size)
	{
		vec4 currentVelocity = 0.9999 * velocity[id];
		vec4 currentAcceleration = (force[id] / mass[id]) + gravity;
		currentVelocity += currentAcceleration * timeStep;
		position[id] += currentVelocity * timeStep;
		
		velocity[id] = currentVelocity;
	}
}